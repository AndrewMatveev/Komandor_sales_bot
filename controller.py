import dbconnector as db
import values as v
import outputter as o
import menu as m


from flask import Flask, request
from telegram import ReplyKeyboardRemove
from datetime import datetime
import copy





app = Flask(__name__)

@app.route('/', methods=["POST"])

def process():

    update = request.json
    if 'message' in update and 'text' in update['message']: # —á–∞—Å—Ç—å "and 'text' in update['message']" -  –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫–ª—é—á–∞ 'text' –≤ –≤–∞—à–µ–º –∑–∞–ø—Ä–æ—Å–µ –ø–µ—Ä–µ–¥ –µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º:
        chat_id = update["message"]["chat"]["id"]
        text = update["message"]["text"]
        



        # ________________________________________________________–û—Ç—Ä–∞–±–æ—Ç–∫–∞ –º–µ–Ω—é____________________________________________________________________
        if text == "/start":
            o.send_message(chat_id=chat_id,
                           text="*–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è —É—á–µ—Ç–∞ –ø—Ä–æ–¥–∞–∂.*\n\n–ù–∞–¥–µ—é—Å—å —è –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π, —á—Ç–æ–±—ã –≤–∞–º –ø–æ–Ω—Ä–∞–≤–∏—Ç—å—Å—è! üòâ",
                           parse_mode="Markdown")
            
            o.send_message(chat_id=chat_id,
                           text="–ü—Ä–∏—Å—Ç—É–ø–∏–º! –ß—Ç–æ –≤—ã—Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å?", reply_markup=m.menu_keyboard)
            

        elif text == m.insrt_btn_txt:
            o.send_message(chat_id=chat_id,
                           text="–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞ üëá",
                           reply_markup=ReplyKeyboardRemove())
            
            v.sale_data['filling'] = 1 # –æ—Ç—Ä—ã—Ç–∏–µ —Ä–µ–∂–∏–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –¥–ª—è –≤–Ω–µ—Å–µ–Ω–∏—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö


        elif text == m.reprt_btn_txt:
            o.send_message(chat_id=chat_id, text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞—á–∞–ª—å–Ω—É—é –¥–∞—Ç—É –¥–ª—è –æ—Ç—á—ë—Ç–∞ ‚û°Ô∏èüìÉ\n\n_–ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:MM_",
                           parse_mode="Markdown",
                           reply_markup=ReplyKeyboardRemove())

            v.report_period['filling'] = 1 # –æ—Ç—Ä—ã—Ç–∏–µ —Ä–µ–∂–∏–º–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ –¥–∞—Ç–∞–º–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –æ—Ç—á–µ—Ç–∞ –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥ –∏–∑ –±–∞–∑—ã


        elif text == m.tomenu_btn_txt:
            o.send_message(chat_id=chat_id, text="–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ.", reply_markup=m.menu_keyboard)
        # _____________________________________________________________________________________________________________________________________________




        # ________________________________________–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –≤–≤–æ–¥–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø—Ä–æ–¥–∞–∂–µ_______________________________________________________
        elif v.sale_data['filling'] == 1:
            

            # –í–≤–æ–¥ –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞
            if v.sale_data['values']['name'] == None: 
                try:
                    v.sale_data['values']["name"] = str(text)  # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç

                    o.send_message(chat_id=chat_id,
                                   text="–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ–¥–∞–Ω–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü üëá",
                                   reply_markup=ReplyKeyboardRemove())
                
                except ValueError: # –æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–Ω–µ—Å–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                    v.sale_data['values']["name"] = None
                    o.send_message(chat_id=chat_id,
                                   text=f"–•–º–º... —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ ü§î\n")
                    print(f'–û—à–∏–±–∫–∞, —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "name" {type(text)}')


            # –í–≤–æ–¥ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Ç–æ–≤–∞—Ä–∞
            elif v.sale_data['values']['count'] == None:
                try:
                    v.sale_data['values']['count'] = float(text.replace(",", ".")) # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç

                    o.send_message(chat_id=chat_id,
                                   text="–¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ü–µ–Ω—É –µ–¥–∏–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞ üëá",
                                   reply_markup=ReplyKeyboardRemove())
                    
                except ValueError:
                    v.sale_data['values']['count'] = None
                    o.send_message(chat_id=chat_id,
                                   text=f"–•–º–º... —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ ü§î\n_–ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ç—É—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª–æ–µ –∏–ª–∏ –¥–µ—Å—è—Ç–∏—á–Ω–æ–µ —á–∏—Å–ª–æ_",
                                   parse_mode="Markdown")
                    print(f'–û—à–∏–±–∫–∞, —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "count" {type(text)}')


            # –í–≤–æ–¥ —Ü–µ–Ω—ã –µ–¥–∏–Ω–∏—Ü—ã —Ç–æ–≤–∞—Ä–∞
            elif v.sale_data['values']['price'] == None:
                try:
                    v.sale_data['values']["price"] = float(text.replace(",", ".")) # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç

                    o.send_message(chat_id=chat_id,
                                   text="–ü–æ—á—Ç–∏ –≤—Å—ë! –û—Å—Ç–∞–ª–æ–ª—å –Ω–∞–ø–∏—Å–∞—Ç—å –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –ø—Ä–æ–¥–∞–∂–∏ üëá\n\n_–ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:MM_",
                                   reply_markup=ReplyKeyboardRemove(), parse_mode="Markdown")
                    
                except ValueError: # –æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–Ω–µ—Å–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                    v.sale_data['values']['price'] = None
                    
                    o.send_message(chat_id=chat_id,
                                   text=f"–•–º–º... —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ ü§î\n_–ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ç—É—Ç –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ü–µ–ª–æ–µ –∏–ª–∏ –¥–µ—Å—è—Ç–∏—á–Ω–æ–µ —á–∏—Å–ª–æ_",
                                   parse_mode="Markdown")
                    print(f'–û—à–∏–±–∫–∞, —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "price" {type(text)}')


            # –í–≤–æ–¥ –¥–∞—Ç—ã –ø—Ä–æ–¥–∞–∂–∏ —Ç–æ–≤–∞—Ä–∞ + –ª–æ–≥–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–æ–¥–∞ + –ª–æ–≥–∏–∫–∞ –≤–Ω–µ—Å–µ–Ω–∏—è –≤ –±–∞–∑—É
            elif v.sale_data['values']['date'] == None:
                try:
                    v.sale_data['values']['date'] = datetime.strptime(text, "%d.%m.%Y, %H:%M").strftime('%Y-%m-%d %H:%M') # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç

                    v.sale_data['filling'] = 0 # –≤—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ –≤–≤–æ–¥–∞

                    o.send_message(chat_id=chat_id,
                                 text=f"–ö—Ä—É—Ç–æ, —Ç–µ–ø–µ—Ä—å –≤ –±–∞–∑—É –¥–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å üëç\n\n<pre>{o.get_input_table(v.sale_data)}</pre>",
                                 parse_mode='HTML',
                                 reply_markup=m.go_to_menu_keyboard)
                    
                    db.add_to_db(v.sale_data) # –≤–Ω–µ—Å–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö

                    v.sale_data['values'] = copy.deepcopy(v.default_sd_val) # —Å–±—Ä–æ—Å –Ω–∞ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è

                except ValueError: # –æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–Ω–µ—Å–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                    v.sale_data['values']["date"] = None
                    o.send_message(chat_id=chat_id,
                                   text=f"–•–º–º... —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ ü§î\n_–ú–æ–∂–µ—Ç –≤—ã —É–ø—É—Å—Ç–∏–ª–∏ –∫–∞–∫–æ–π-—Ç–æ —Å–∏–º–≤–æ–ª? –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ—á–∫—É, –∑–∞–ø—è—Ç—É—é –∏–ª–∏ –ø—Ä–æ–±–µ–ª._",
                                   parse_mode="Markdown")
                    print(f'–û—à–∏–±–∫–∞, —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "date" {type(text)}')
        # ________________________________________________________________________________________________________________________________________________
  


        

        # ____________________________________________–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –≤—ã–≤–æ–¥–∞ –æ—Ç—á—ë—Ç–∞_______________________________________________________________
        elif v.report_period['filling'] == 1:


            # –í–≤–æ–¥ –Ω–∞—á–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã –¥–ª—è –æ—Ç—á—ë—Ç–∞
            if v.report_period['values']['start'] == None:
                try:
                    v.report_period['values']["start"] = datetime.strptime(text, "%d.%m.%Y, %H:%M").strftime('%Y-%m-%d %H:%M') # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç

                    o.send_message(chat_id=chat_id,
                                   text="–í–≤–µ–¥–∏—Ç–µ –∫–æ–Ω–µ—á–Ω—É—é –¥–∞—Ç—É –¥–ª—è –æ—Ç—á—ë—Ç–∞ üìÉ‚¨ÖÔ∏è\n\n_–ü–æ–¥—Å–∫–∞–∑–∫–∞: —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì, –ß–ß:MM_",
                                   reply_markup=ReplyKeyboardRemove(),
                                   parse_mode="Markdown")
                    
                except ValueError: # –æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–Ω–µ—Å–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                    v.report_period['values']["start"] = None
                    o.send_message(chat_id=chat_id, text=f"–•–º–º... —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ ü§î\n_–ú–æ–∂–µ—Ç –≤—ã —É–ø—É—Å—Ç–∏–ª–∏ –∫–∞–∫–æ–π-—Ç–æ —Å–∏–º–≤–æ–ª? –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ—á–∫—É, –∑–∞–ø—è—Ç—É—é –∏–ª–∏ –ø—Ä–æ–±–µ–ª._", parse_mode="Markdown")
                    print(f'–û—à–∏–±–∫–∞, —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "start" {type(text)}')
            

            # –í–≤–æ–¥ –∫–æ–Ω–µ—á–Ω–æ–π –¥–∞—Ç—ã –¥–ª—è –æ—Ç—á—ë—Ç–∞ + –ª–æ–≥–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤–≤–æ–¥–∞ + –ª–æ–≥–∏–∫–∞ –≤—ã–≤–æ–¥–∞ –æ—Ç—á–µ—Ç–∞
            elif v.report_period['values']['final'] == None:
                try:
                    v.report_period['values']["final"] = datetime.strptime(text, "%d.%m.%Y, %H:%M").strftime('%Y-%m-%d %H:%M') # –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç

                    v.report_period['filling'] = 0 # –≤—ã—Ö–æ–¥ –∏–∑ —Ä–µ–∂–∏–º–∞ –≤–≤–æ–¥–∞

                    o.send_message(chat_id=chat_id,
                                   text=f"–û—Ç—á–µ—Ç –æ –ø—Ä–æ–¥–∞–∂–∞—Ö –∑–∞ –ø–µ—Ä–∏–æ–¥ c {v.report_period['values']['start']} –ø–æ {v.report_period['values']['final']} —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω ü´°")

                    column_names = db.get_column_names()
                    united_select_data = db.select_between_date(v.report_period['values']["start"],
                                                                v.report_period['values']['final'])

                    for chunk in o.chunk_lst(united_select_data): # —Ü–∏–∫–ª –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞ c –æ–±—Ö–æ–¥–æ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
                        o.send_message(chat_id=chat_id,
                                    text=f"<pre>{o.format_to_table(column_names, chunk)}</pre>",
                                    parse_mode="HTML",
                                    reply_markup=m.go_to_menu_keyboard)

                    v.report_period['values'] = copy.deepcopy(v.default_rp_val) # —Å–±—Ä–æ—Å –Ω–∞ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è

                except ValueError: # –æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –≤–Ω–µ—Å–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
                    v.report_period['values']["final"] = None
                    o.send_message(chat_id=chat_id,
                                   text=f"–•–º–º... —á—Ç–æ –≤–≤–µ–¥–µ–Ω–æ —á—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ ü§î\n_–ú–æ–∂–µ—Ç –≤—ã —É–ø—É—Å—Ç–∏–ª–∏ –∫–∞–∫–æ–π-—Ç–æ —Å–∏–º–≤–æ–ª? –ù–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ—á–∫—É, –∑–∞–ø—è—Ç—É—é –∏–ª–∏ –ø—Ä–æ–±–µ–ª._",
                                   parse_mode="Markdown")
                    print(f'–û—à–∏–±–∫–∞, —Ç–∏–ø –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π "start" {type(text)}')

                
        else: # –æ—Ç—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ—Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã
            o.send_message(chat_id=chat_id,
                           text="–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω—è—Ç–Ω–æ, –Ω–æ –æ—á–µ–Ω—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! ü§®\n_–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–µ–Ω—é ‚ù§Ô∏è_",
                           parse_mode="Markdown",
                           reply_markup=m.go_to_menu_keyboard)


    return {"ok": True}




